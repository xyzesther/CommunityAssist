// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

enum RequestStatus {
  OPEN
  IN_PROGRESS
  COMPLETED
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  auth0Id      String   @unique @default("")
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  appointments Appointment[]
  requests     Request[]
}

model Request {
  requestId    Int           @id @default(autoincrement())
  userId       Int
  title        String
  description  String
  status       RequestStatus @default(OPEN)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  appointments Appointment[]

  @@index([userId])
}

model Appointment {
  appointmentId   Int       @id @default(autoincrement())
  volunteerId     Int
  requestId       Int
  appointmentTime DateTime
  status          AppointmentStatus @default(SCHEDULED)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  volunteer       User      @relation(fields: [volunteerId], references: [id])
  request         Request   @relation(fields: [requestId], references: [requestId])

  @@index([volunteerId])
  @@index([requestId])
}
